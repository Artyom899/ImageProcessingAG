My n = 20
ID = 4




import ij.*;
import ij.plugin.PlugIn;
import ij.process.*;
import java.io.*;
import java.util.StringTokenizer;

public class CourseConflictPlugin implements PlugIn {

    @Override
    public void run(String arg) {
        
        int numCourses = 0;
        try {
            BufferedReader br = new BufferedReader(new FileReader("hec-s-92.crs"));
            String line;
            while ((line = br.readLine()) != null) {
                numCourses = Integer.parseInt(line.trim());
            }
            br.close();
        } catch (IOException e) {
            IJ.error("Error reading *.crs file: " + e.getMessage());
            return;
        }

        
        ImageProcessor binaryProcessor = new ByteProcessor(numCourses, numCourses);
        binaryProcessor.setValue(255); // Set the pixel value to white
        binaryProcessor.fill();

        
        try {
            BufferedReader br = new BufferedReader(new FileReader("hec-s-92.stu"));
            String line;
            while ((line = br.readLine()) != null) {
                StringTokenizer tokenizer = new StringTokenizer(line);
                if (tokenizer.countTokens() != 2) {
                    continue; // Skip lines with less or more than two tokens
                }
                int x = Integer.parseInt(tokenizer.nextToken());
                int y = Integer.parseInt(tokenizer.nextToken());
                binaryProcessor.putPixel(x, y, 0); // Mark the pixel as black
            }
            br.close();
        } catch (IOException e) {
            IJ.error("Error reading *.stu file: " + e.getMessage());
            return;
        }

        
        ImagePlus imagePlus = new ImagePlus("Course Schedule", binaryProcessor);
        imagePlus.show();

        
        String datasetName = "hec-s-92";
        String outputPath = hec-s-92 + ".png";
        FileSaver fileSaver = new FileSaver(imagePlus);
        if (fileSaver.saveAsPng(outputPath)) {
            IJ.log("Image saved as " + outputPath);
        } else {
            IJ.error("Error saving image.");
        }
    }
}









import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;
import java.awt.*;

public class SwapPanelsPlugin implements PlugInFilter {

    @Override
    public int setup(String arg, ImagePlus imp) {
        // This filter requires an open image.
        if (imp == null) {
            IJ.noImage();
            return DONE;
        }
        return DOES_8G;
    }

    @Override
    public void run(ImageProcessor ip) {
        
        int width = ip.getWidth();
        int height = ip.getHeight();
        
        
        int halfWidth = width / 2;
        int halfHeight = height / 2;

        
        ImageProcessor leftPanel = ip.createProcessor(halfWidth, height);
        ImageProcessor rightPanel = ip.createProcessor(halfWidth + (width % 2), height);
        
        
        leftPanel.copyBits(ip, 0, 0, Blitter.COPY);
        rightPanel.copyBits(ip, halfWidth, 0, Blitter.COPY);
        
        
        leftPanel.flipHorizontal();
        rightPanel.flipHorizontal();
        
        
        ImageProcessor topPanel = ip.createProcessor(width, halfHeight);
        ImageProcessor bottomPanel = ip.createProcessor(width, halfHeight + (height % 2));
        
        topPanel.copyBits(ip, 0, 0, Blitter.COPY);
        bottomPanel.copyBits(ip, 0, halfHeight, Blitter.COPY);
        
        
        topPanel.flipVertical();
        bottomPanel.flipVertical();
        
      
        ImageProcessor resultIp = new ByteProcessor(width, height);
        resultIp.copyBits(leftPanel, 0, 0, Blitter.COPY);
        resultIp.copyBits(rightPanel, halfWidth, 0, Blitter.COPY);
        resultIp.copyBits(topPanel, 0, 0, Blitter.COPY);
        resultIp.copyBits(bottomPanel, 0, halfHeight, Blitter.COPY);
        
    
        ImagePlus resultImage = new ImagePlus("Swapped Panels", resultIp);
        resultImage.show();
        
        
        FileSaver fileSaver = new FileSaver(resultImage);
        fileSaver.saveAsPng("copy.png");
    }
}
